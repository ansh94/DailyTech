<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:fitsSystemWindows="true"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".FavoriteMovieActivity">


    <android.support.design.widget.AppBarLayout
        android:id="@+id/appBar_favorite"
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <android.support.v7.widget.Toolbar
            android:id="@+id/toolbar_favorite"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            app:popupTheme="@style/ThemeOverlay.AppCompat.Light">


        </android.support.v7.widget.Toolbar>

    </android.support.design.widget.AppBarLayout>


    <android.support.v7.widget.RecyclerView
        android:id="@+id/recyclerView_favorite"
        android:layout_width="match_parent"
        android:paddingTop="?attr/actionBarSize"
        android:layout_height="match_parent"
        />


    <!--<View-->
        <!--android:id="@+id/empty_view"-->
        <!--android:layout_width="match_parent"-->
        <!--android:layout_height="match_parent"-->
        <!--android:background="#FFFFFF"-->
        <!--android:visibility="invisible"/>-->


</android.support.design.widget.CoordinatorLayout>

    <!--one important thing the scrolling view behavior does is to
        layout the component below the toolbar. Because the FrameLayout
        has a descendant that will scroll (RecyclerView), the
        CoordinatorLayout will get those scrolling events for moving
         the Toolbar. -->
